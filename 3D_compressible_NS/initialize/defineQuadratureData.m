%% defineQuadratureData
%  This function defines the quadrature and gauss weight details
%  of the problems element type 
%
function [gP, gW, N, Nx, Ny, Nz, nQuad] = defineQuadratureData(elemType, Flag3D)

	if strcmp(elemType,'3Tri')
		gP = ...
	   [1/6,  1/6
		2/3,  1/6
		1/6,  2/3] ;
		
        gW = ...
	   [1/3,  1/3,  1/3] ;
	 
		N(:,1) = (1.-gP(:,1)-gP(:,2)) ;
		N(:,2) = (gP(:,1)) ;
		N(:,3) = (gP(:,2)) ;
		
		Nx(:,1) = -ones(3,1) ;
		Nx(:,2) =  ones(3,1) ;
		Nx(:,3) =  zeros(3,1) ; 
		Ny(:,1) = -ones(3,1) ;
		Ny(:,2) =  zeros(3,1) ;
		Ny(:,3) =  ones(3,1) ; 
        
	elseif strcmp(elemType,'4Quad')
		gP = ...
	   [-5.7735026918962584E-01, -5.7735026918962584E-01
		 5.7735026918962584E-01, -5.7735026918962584E-01
		-5.7735026918962584E-01,  5.7735026918962584E-01
		 5.7735026918962584E-01,  5.7735026918962584E-01] ;
		
        gW = [1, 1, 1, 1 ] ;
		
		N(:,1) = 0.25.*(1-gP(:,1)).*(1-gP(:,2)) ;
		N(:,2) = 0.25.*(1+gP(:,1)).*(1-gP(:,2)) ;
		N(:,3) = 0.25.*(1+gP(:,1)).*(1+gP(:,2)) ;
		N(:,4) = 0.25.*(1-gP(:,1)).*(1+gP(:,2)) ;
		
		Nx(:,1) = -0.25.*(1-gP(:,2)) ;
		Nx(:,2) =  0.25.*(1-gP(:,2)) ;
		Nx(:,3) =  0.25.*(1+gP(:,2)) ;
		Nx(:,4) = -0.25.*(1+gP(:,2)) ;
		Ny(:,1) = -0.25.*(1-gP(:,1)) ;
		Ny(:,2) = -0.25.*(1+gP(:,1)) ;
		Ny(:,3) =  0.25.*(1+gP(:,1)) ;
		Ny(:,4) =  0.25.*(1-gP(:,1)) ;
        
	elseif strcmp(elemType,'6Prism')
		gP = ...
	   [3.3333333333333331E-01,  3.3333333333333331E-01, -5.7735026918962584E-01
		1.3333333333333333E+00,  3.3333333333333331E-01, -5.7735026918962584E-01
		3.3333333333333331E-01,  1.3333333333333333E+00, -5.7735026918962584E-01
		3.3333333333333331E-01,  3.3333333333333331E-01,  5.7735026918962584E-01
		1.3333333333333333E+00,  3.3333333333333331E-01,  5.7735026918962584E-01
		3.3333333333333331E-01,  1.3333333333333333E+00,  5.7735026918962584E-01] ;
		
        gW = ...
	   [6.6666666666666667E-01,  6.6666666666666667E-01,  6.6666666666666667E-01,...
		6.6666666666666667E-01,  6.6666666666666667E-01,  6.6666666666666667E-01] ;

		N(:,1) = 0.25*(2-gP(:,1)-gP(:,2)).*(1-gP(:,3)) ;
		N(:,2) = 0.25*(gP(:,1)).*(1-gP(:,3)) ;
		N(:,3) = 0.25*(gP(:,2)).*(1-gP(:,3)) ;
		N(:,4) = 0.25*(2-gP(:,1)-gP(:,2)).*(1+gP(:,3)) ;
		N(:,5) = 0.25*(gP(:,1)).*(1+gP(:,3)) ;
		N(:,6) = 0.25*(gP(:,2)).*(1+gP(:,3)) ;
		
		Nx(:,1) = -0.25.*(1-gP(:,3)) ;
		Nx(:,2) =  0.25.*(1-gP(:,3)) ;
		Nx(:,3) =  zeros(6,1) ;
		Nx(:,4) = -0.25.*(1+gP(:,3)) ;
		Nx(:,5) =  0.25.*(1+gP(:,3)) ;
		Nx(:,6) =  zeros(6,1) ;    
		Ny(:,1) = -0.25.*(1-gP(:,3)) ;
		Ny(:,2) =  zeros(6,1) ;
		Ny(:,3) =  0.25.*(1-gP(:,3)) ;
		Ny(:,4) = -0.25.*(1+gP(:,3)) ;
		Ny(:,5) =  zeros(6,1) ;
		Ny(:,6) =  0.25.*(1+gP(:,3)) ;    
		Nz(:,1) = -0.25.*(2-gP(:,1)-gP(:,2)) ;
		Nz(:,2) = -0.25.*(gP(:,1)) ;
		Nz(:,3) = -0.25.*(gP(:,2)) ;
		Nz(:,4) =  0.25.*(2-gP(:,1)-gP(:,2)) ;
		Nz(:,5) =  0.25.*(gP(:,1)) ;
		Nz(:,6) =  0.25.*(gP(:,2)) ;
	
    elseif strcmp(elemType,'8Hex')
		gP = ...
	   [-5.7735026918962584E-01, -5.7735026918962584E-01, -5.7735026918962584E-01
		 5.7735026918962584E-01, -5.7735026918962584E-01, -5.7735026918962584E-01
		-5.7735026918962584E-01,  5.7735026918962584E-01, -5.7735026918962584E-01
		 5.7735026918962584E-01,  5.7735026918962584E-01, -5.7735026918962584E-01
		-5.7735026918962584E-01, -5.7735026918962584E-01,  5.7735026918962584E-01
		 5.7735026918962584E-01, -5.7735026918962584E-01,  5.7735026918962584E-01
		-5.7735026918962584E-01,  5.7735026918962584E-01,  5.7735026918962584E-01
		 5.7735026918962584E-01,  5.7735026918962584E-01,  5.7735026918962584E-01] ;
		
        gW = ...
	   [1, 1, 1, 1, 1, 1, 1, 1 ] ;

		N(:,1) = 0.125.*(1-gP(:,1)).*(1-gP(:,2)).*(1-gP(:,3)) ;
		N(:,2) = 0.125.*(1+gP(:,1)).*(1-gP(:,2)).*(1-gP(:,3)) ;
		N(:,3) = 0.125.*(1+gP(:,1)).*(1+gP(:,2)).*(1-gP(:,3)) ;
		N(:,4) = 0.125.*(1-gP(:,1)).*(1+gP(:,2)).*(1-gP(:,3)) ;
		N(:,5) = 0.125.*(1-gP(:,1)).*(1-gP(:,2)).*(1+gP(:,3)) ;
		N(:,6) = 0.125.*(1+gP(:,1)).*(1-gP(:,2)).*(1+gP(:,3)) ;
		N(:,7) = 0.125.*(1+gP(:,1)).*(1+gP(:,2)).*(1+gP(:,3)) ;
		N(:,8) = 0.125.*(1-gP(:,1)).*(1+gP(:,2)).*(1+gP(:,3)) ;

		Nx(:,1) = -0.125.*(1-gP(:,2)).*(1-gP(:,3)) ;
		Nx(:,2) =  0.125.*(1-gP(:,2)).*(1-gP(:,3)) ;
		Nx(:,3) =  0.125.*(1+gP(:,2)).*(1-gP(:,3)) ;
		Nx(:,4) = -0.125.*(1+gP(:,2)).*(1-gP(:,3)) ;
		Nx(:,5) = -0.125.*(1-gP(:,2)).*(1+gP(:,3)) ;
		Nx(:,6) =  0.125.*(1-gP(:,2)).*(1+gP(:,3)) ;
		Nx(:,7) =  0.125.*(1+gP(:,2)).*(1+gP(:,3)) ;
		Nx(:,8) = -0.125.*(1+gP(:,2)).*(1+gP(:,3)) ; 
		Ny(:,1) = -0.125.*(1-gP(:,1)).*(1-gP(:,3)) ;
		Ny(:,2) = -0.125.*(1+gP(:,1)).*(1-gP(:,3)) ;
		Ny(:,3) =  0.125.*(1+gP(:,1)).*(1-gP(:,3)) ;
		Ny(:,4) =  0.125.*(1-gP(:,1)).*(1-gP(:,3)) ;
		Ny(:,5) = -0.125.*(1-gP(:,1)).*(1+gP(:,3)) ;
		Ny(:,6) = -0.125.*(1+gP(:,1)).*(1+gP(:,3)) ;
		Ny(:,7) =  0.125.*(1+gP(:,1)).*(1+gP(:,3)) ;
		Ny(:,8) =  0.125.*(1-gP(:,1)).*(1+gP(:,3)) ; 
		Nz(:,1) = -0.125.*(1-gP(:,1)).*(1-gP(:,2)) ;
		Nz(:,2) = -0.125.*(1+gP(:,1)).*(1-gP(:,2)) ;
		Nz(:,3) = -0.125.*(1+gP(:,1)).*(1+gP(:,2)) ;
		Nz(:,4) = -0.125.*(1-gP(:,1)).*(1+gP(:,2)) ;
		Nz(:,5) =  0.125.*(1-gP(:,1)).*(1-gP(:,2)) ;
		Nz(:,6) =  0.125.*(1+gP(:,1)).*(1-gP(:,2)) ;
		Nz(:,7) =  0.125.*(1+gP(:,1)).*(1+gP(:,2)) ;
		Nz(:,8) =  0.125.*(1-gP(:,1)).*(1+gP(:,2)) ;
	else
		warning('elemType not found!!');
	end
	
	Nx = Nx' ;
	Ny = Ny' ;
    
	if (Flag3D == 1)
        Nz = Nz' ;
    end
    
	nQuad = length(gW) ;

end